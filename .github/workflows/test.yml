name: Validate 'rubocop-composite-action'
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  schedule:
    - cron: 0 0 * * *

jobs:
  default-version-matrix:
    name: Setup ${{ matrix.ruby }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        ruby: [2.7, 3.2.2]
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}

    - uses: actions/setup-python@v5
      with:
        python-version: 3.12.2

    - name: Run rubocop
      id: rubocop
      uses: ./
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TEST_DONOT_THROW: true   # For the in-repo tests, I don't want to fail the workflow

    - name: Validate rubocop run
      if: always()  # We expect the step before to fail!
      shell: bash
      run: |
        set -x
        ruby --version
        python --version
        gem list | grep rubocop
        echo ${{ steps.rubocop.outputs.summary }}
        echo ${{ steps.rubocop.outputs.all_output }}
        offense_count=$(echo ${{ steps.rubocop.outputs.summary }} | jq .offense_count)
        if [[ "$offense_count" -ne 7 ]]; then
          exit 1
        fi
        if [[ "${{ steps.rubocop.outputs.rubocop_was_installed }}" != "true" ]]; then
          exit 1
        fi
         if [[ "$(rubocop --version)" != "0.80.1" ]]; then
          exit 1
        fi

  specific-version:
    name: Setup with rubocop version as argument
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.2

    - uses: actions/setup-python@v5
      with:
        python-version: 3.12.2

    - name: Run rubocop
      id: rubocop
      uses: ./
      with:
        rubocop-version: 1.50.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TEST_DONOT_THROW: true   # For the in-repo tests, I don't want to fail the workflow

    - name: Validate rubocop run
      if: always()  # We expect the step before to fail!
      shell: bash
      run: |
        set -x
        ruby --version
        python --version
        gem list | grep rubocop
        echo ${{ steps.rubocop.outputs.summary }}
        echo ${{ steps.rubocop.outputs.all_output }}
        offense_count=$(echo ${{ steps.rubocop.outputs.summary }} | jq .offense_count)
        if [[ "$offense_count" -ne 7 ]]; then
          exit 1
        fi
        if [[ "${{ steps.rubocop.outputs.rubocop_was_installed }}" != "true" ]]; then
          exit 1
        fi
         if [[ "$(rubocop --version)" != "1.50.0" ]]; then
          exit 1
        fi

  rubocop-already-installed:
    name: Setup with rubocop already installed
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.2

    - uses: actions/setup-python@v5
      with:
        python-version: 3.12.2

    - name: Pre-install rubocop
      shell: bash
      run: |
        gem install rubocop -v '1.50.0'

    - name: Run rubocop
      id: rubocop
      uses: ./
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TEST_DONOT_THROW: true   # For the in-repo tests, I don't want to fail the workflow

    - name: Validate rubocop run
      if: always()  # We expect the step before to fail!
      shell: bash
      run: |
        set -x
        ruby --version
        python --version
        gem list | grep rubocop
        echo ${{ steps.rubocop.outputs.summary }}
        echo ${{ steps.rubocop.outputs.all_output }}
        offense_count=$(echo ${{ steps.rubocop.outputs.summary }} | jq .offense_count)
        if [[ "$offense_count" -ne 7 ]]; then
          exit 1
        fi
        if [[ "${{ steps.rubocop.outputs.rubocop_was_installed }}" != "false" ]]; then
          exit 1
        fi
        if [[ "$(rubocop --version)" != "1.50.0" ]]; then
          exit 1
        fi
